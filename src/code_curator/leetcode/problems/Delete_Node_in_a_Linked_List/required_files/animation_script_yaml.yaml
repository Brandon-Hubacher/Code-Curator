KeyPoints:
  intro: Now, considering everything about this problem, let's identify and examine the key pieces of information.
  key_point_1:
    0: Here, we have a linked list
    1:
      fade_in_temp_trav: with pointers p1 and p2, with p1 situated at the head, and p2 at the heads next node.
      move_first_temp_trav_n: We advance both pointers until p1 reaches the node before the node to be removed.
      move_second_temp_trav_n: Then, move p2 one more node so that p1 and p2 sandwich the node to be removed.
      wave_pointer: Now, take p1s next pointer
      curve_pointer: and set it equal to p2.
      fade_out_container: We have now effectively removed the node from the linked list.
      flatten_list: Return everything to normal.
    2: We can also solve this
    3:
      next_fade_in_temp_trav: with just p1.
      next_move_first_temp_trav_n: Again, advance p1 until it's just before the node we want to remove.
      next_wave_pointer: Then take p1s next pointer and set it
      next_shrink_pointer: equal to p1
      next_unshrink_pointer: .next
      next_curve_pointer: .next.
      next_fade_out_container: We have again removed the node.
      next_flatten_list: Now return everything to normal again.
    key_point_1_fade_in: As
    _IMPLICIT_WAIT_1: you can see, the node to be deleted is not the tail.
